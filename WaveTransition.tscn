[gd_scene load_steps=5 format=2]

[ext_resource path="res://WaveTransition.gd" type="Script" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode unshaded;

uniform float cutoff : hint_range(0.0, 1.0);
uniform float wave_size : hint_range(0.0, 1.0) = 0.1;
uniform float wave_frequency : hint_range(0.0, 0.1) = 0.04;
uniform float wave_speed : hint_range(0.0, 30.0) = 20.0;
uniform float wave_foam_size : hint_range(0, 0.1) = 0.01;
uniform vec4 foam_color : hint_color;

void fragment() {
	float value = (1.0 - SCREEN_UV.x) * (1.0 - wave_size - wave_foam_size);
	float alpha = 1.0;
	vec3 color = COLOR.rgb + vec3(0.0, value, 0.0) / 5.0;
	
	float wave_cutoff_percent = (sin(SCREEN_UV.y / wave_frequency + TIME * wave_speed) + 1.0) / 2.0;
	float wave_cutoff_value = cutoff - wave_cutoff_percent * wave_size;

	if (value < wave_cutoff_value) {
		if (value > wave_cutoff_value - wave_foam_size) {
			color = foam_color.rgb;
		} else {
			alpha = 0.0;
		}
	}
	
	COLOR = vec4(color, alpha);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/cutoff = 0.0
shader_param/wave_size = 0.1
shader_param/wave_frequency = 0.064
shader_param/wave_speed = 15.927
shader_param/wave_foam_size = 0.048
shader_param/foam_color = Color( 0.827451, 0.964706, 1, 1 )

[sub_resource type="Animation" id=3]
resource_name = "transition_out"
tracks/0/type = "bezier"
tracks/0/path = NodePath(".:material:shader_param/cutoff")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}

[node name="WaveTransition" type="ColorRect"]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0.623529, 0.960784, 1 )
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/transition_out = SubResource( 3 )
